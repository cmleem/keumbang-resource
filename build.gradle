buildscript {
	// 24.07.21 기준 최신 버전
	ext {
		protobufVersion = '4.27.2'
		protobufPluginVersion = '0.9.4'
		grpcVersion = '1.65.1'
	}
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

group = 'backend'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
	// protobuf
	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

	// grpc 서버, 클라이언트 설정
	implementation 'net.devh:grpc-spring-boot-starter:3.1.0.RELEASE'
	implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
}

protobuf {
	// Protobuf 컴파일러를 지정하여 .proto 파일을 컴파일합니다.
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	// 생성된 파일을 정리합니다.
	clean {
		delete generatedFilesBaseDir
	}
	// gRPC 플러그인을 설정하여 Protobuf 파일로부터 gRPC 관련 코드를 생성합니다.
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	// 모든 프로토콜 버퍼 작업에 대해 gRPC 플러그인을 적용합니다.
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

tasks.named('test') {
    useJUnitPlatform()
}
